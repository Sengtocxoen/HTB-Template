#!/usr/bin/env python3
import os
from datetime import datetime
from colorama import Fore, Style

class Logger:
    def __init__(self, output_dir, timestamp):
        self.output_dir = output_dir
        self.timestamp = timestamp
        self.log_file = f"{output_dir}/pentest_log_{timestamp}.txt"
        
        # Initialize log file
        with open(self.log_file, "w") as f:
            f.write(f"# Penetration Test Log\n")
            f.write(f"# Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")

    def _log(self, message, level="INFO", color=Fore.BLUE):
        """Internal logging method"""
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        formatted_msg = f"[{timestamp}] [{level}] {message}"
        
        # Print to console with color
        print(f"{color}{formatted_msg}{Style.RESET_ALL}")
        
        # Write to log file
        with open(self.log_file, "a") as f:
            f.write(f"{formatted_msg}\n")

    def info(self, message):
        """Log informational message"""
        self._log(message, "INFO", Fore.BLUE)

    def warning(self, message):
        """Log warning message"""
        self._log(message, "WARNING", Fore.YELLOW)

    def error(self, message):
        """Log error message"""
        self._log(message, "ERROR", Fore.RED)

    def success(self, message):
        """Log success message"""
        self._log(message, "SUCCESS", Fore.GREEN)

    def debug(self, message):
        """Log debug message"""
        self._log(message, "DEBUG", Fore.CYAN) 